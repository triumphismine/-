import pygame,random,time#三大对象：time,display,event时间,draw

#初始化
pygame.init()
clock=pygame.time.Clock()
last_execution_time=time.time()#记录上次执行的时间

#常量
W=800
H=600
ROW=30
COL=40

#各种颜色
SCORE_TEXT_COLOR=(192,192,192)    #分数文字颜色
TIP_TEXT_COLOR=(64,64,64)         #提示颜色
block_color=(0,0,0)
food_color=(222,222,222)
head_color=(0,125,155)
bg_color=(144,233,233)
body_color=(111,111,222)

block_exi=[]
size=(W,H)
window=pygame.display.set_mode(size)#display含有显示相关功能
pygame.display.set_caption('贪吃蛇')


#font=pygame.font.SysFont('arial',48,True,False)
class Label(object):
    #文字标签
    def __init__(self,size=48,type='score'):#不传默认显示分数，大小48
        self.font=pygame.font.SysFont("arial",size)
        self.type=type
    def draw(self,window,text):
        #place=(0,0)
        #渲染字体
        if self.type=='score':
            color = SCORE_TEXT_COLOR
        else: color=TIP_TEXT_COLOR

        if self.type=='score':
            place=(0,0)
        elif self.type=='com':
            place=(300,250)
        elif self.type=='eas':
            place=(230,200)
        elif self.type=='dif':
            place=(400,240)
        else:place=(400,400)

        text_surface=self.font.render(text,True,color)

        #绘制文本内容到窗口
        window.blit(text_surface,place)

start_label=Label(35,'score')
eas_mode_label=Label(75,'eas')
dif_mode_label=Label(55,'com')
score_label=Label()  #得分的标签
score=0
pause_label=Label(55,'com')  #暂停的标签
dead_label=Label(60,'eas')

class Point:
    row=0
    col=0
    def __init__(self,col,row):
        self.row=row
        self.col=col
    def copy(self):
        return Point(row=self.row,col=self.col)
#定义坐标
head=Point(row=int(ROW/2),col=int(COL/2))


snake=[Point(row=head.row,col=head.col+1),Point(row=head.row,col=head.col+2),Point(row=head.row,col=head.col+3)]



def gen_food():
    while 1:
        pos=Point(row=random.randint(0,ROW-2),col=random.randint(0,COL-2))
        collision=False
        if head.row==pos.row and head.col==pos.col:
            collision=True
        for item in snake:
            if item.row==pos.row and item.col==pos.col:
                collision=True
                break

        if not collision:
            break
    return pos

food=gen_food()

def rect(point,color):
    cell_width=W/COL
    cell_height=H/ROW

    left=point.col*cell_width
    top=point.row*cell_height

    pygame.draw.rect(window,color,(left,top,cell_width,cell_height))

direct='left'

start=False
quit=False
pause=False
mode='not'

eas_x1=234
eas_x2=351
eas_y1=232
eas_y2=274

dif_x1=430
dif_x2=620
dif_y1=212
dif_y2=274

while not start and not quit:
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            quit=True

    mouse_pos = pygame.mouse.get_pos()
    mouse_x,mouse_y=mouse_pos
    #print("鼠标位置:", mouse_pos)
    # 获取鼠标按钮状态
    mouse_buttons = pygame.mouse.get_pressed()
    # 鼠标左键按下
    if mouse_buttons[0]:
        if eas_x1<=mouse_x<=eas_x2 and eas_y1<=mouse_y<=eas_y2:
            mode='eas'
            #print('eas')
            break
        elif dif_x1<=mouse_x<=dif_x2 and dif_y1<=mouse_y<=dif_y2:
            mode='dif'
            #print('dif')
            break
        #print(mouse_pos)


    pygame.draw.rect(window, bg_color, (0, 0, W, H))
    start_label.draw(window, 'choose mode to start game(click)(use spacebar to pause)')
    eas_mode_label.draw(window,'easy    difficult')

    pygame.display.flip()

    clock.tick(10)  # sleep(1000/60),设置帧频

def gen_block():
    while 1:
        pos=Point(row=random.randint(0,ROW-1),col=random.randint(0,COL-1))
        collision=False
        if head.row==pos.row and head.col==pos.col:
            collision=True
        if food.row==pos.row and food.col==pos.col:
            collision=True
        for item in snake:
            if item.row==pos.row and item.col==pos.col:
                collision=True
                break
        for item in block_exi:
            if item.row == pos.row and item.col == pos.col:
                collision = True
                break
        if not collision:
            break
    block_exi.append(pos)
    return pos
if mode=='dif':
   block=gen_block()

while not quit:
    print(mode)
    #处理事件
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            quit=True
        elif event.type==pygame.KEYDOWN:#如果按下键盘
            #print(event.key)
            if event.key == 32:
                pause = not pause

            elif event.key==1073741906:#如果按下下键
                if direct!='down':#避免直接转弯
                   direct='up'
            elif event.key==1073741905:
                if direct !='up':
                   direct='down'
            elif event.key==1073741904:
                if direct!='right':
                   direct='left'
            elif event.key==1073741903:
                if direct!='left':
                     direct = 'right'


    eat=(head.row==food.row and head.col==food.col)

    #处理身子
    snake.insert(0,head.copy())
    if not eat:
        snake.pop()
    else:
        score+=1
        food=gen_food()
    #移动
    if direct=='left':
        head.col-=1
    elif direct=='right':
        head.col+=1
    elif direct=='up':
        head.row-= 1
    elif direct=='down':
        head.row+=1
    dead=False
    if head.col<0 or head.row<0 or head.col>=COL or head.row>=ROW:#检测撞墙
        dead=True
    for item in block_exi:
        if head.col==item.col and head.row==item.row:
            dead=True
    for item in snake:
        if head.col==item.col and head.row==item.row:
            dead=True
            break
    while dead and not quit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()  # 可能其他代码在运行

        dead_label.draw(window,'you dead(click to quit)')
        # 获取鼠标按钮状态
        mouse_buttons = pygame.mouse.get_pressed()
        #print('dead')
        if mouse_buttons[0]:
            quit=True

        pygame.display.flip()

        clock.tick(10)  # sleep(1000/60),设置帧频


    #渲染——把东西画出来
    #背景
    pygame.draw.rect(window,bg_color,(0,0,W,H))
    #蛇头
    rect(head,head_color)
    rect(food,food_color)
    score_label.draw(window,'score:%d'%score)

    for item in block_exi:
        rect(item,block_color)

    for item in snake:
        rect(item,body_color)


    while pause and not quit:
        pause_label.draw(window, 'Pause Now')#不知为何无法显示？？？？？
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                quit = True
            elif event.type == pygame.KEYDOWN:  # 如果按下键盘
                #print(event.key)
                if event.key == 32:
                    pause = not pause
                    break
        pygame.display.flip()
        clock.tick(10)#sleep(1000/60),设置帧频

    if mode == 'dif':
        current_time = time.time()  # 获取当前时间
        if current_time - last_execution_time >= 10:
            gen_block()
            last_execution_time = current_time


    pygame.display.flip()

    clock.tick(10)#sleep(1000/60),设置帧频

    pass
